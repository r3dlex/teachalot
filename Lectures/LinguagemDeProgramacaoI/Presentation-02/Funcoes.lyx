#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass beamer
\use_default_options true
\maintain_unincluded_children false
\language brazilian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 1
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout PlainFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Paradigma estrutural
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout
\begin_inset External
	template JavaSource
	filename ../Code/FuncaoMain.java

\end_inset


\end_layout

\begin_layout Itemize
Vimos somente programas definidos dentro da função main
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
uncover<2->{
\end_layout

\end_inset

Problema: Algoritmos tendem a ficar 
\emph on
complexos
\emph default
...
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
uncover<2->{
\end_layout

\end_inset

Programas possuem milhares de linhas de código
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout PlainFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Itemize
Faz-se necessário dividir o programa em unidades 
\emph on
lógicas
\end_layout

\begin_layout Itemize
Essa divisão é feita em funções / procedures
\end_layout

\begin_layout Itemize
Um conjunto coeso de procedures é um módulo
\end_layout

\begin_layout Itemize
Ambas as definições são duas importantes para o paradigma estrutural
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout PlainFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Função Java
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout
\begin_inset External
	template JavaSource
	filename ../Code/FuncaoMain.java

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
uncover<2->{
\end_layout

\end_inset


\emph on
Modificadores TipoDeRetorno NomeDaFuncao(Argumentos)
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
uncover<3->{
\end_layout

\end_inset

Modificadores: 
\begin_inset Formula $\{public,static\}$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
uncover<4->{
\end_layout

\end_inset

TipoDeRetorno: void
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
uncover<5->{
\end_layout

\end_inset

NomeDaFuncao: main
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
uncover<6->{
\end_layout

\end_inset

Argumentos: String[] args
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout PlainFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Revisitando fatorial
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout
\begin_inset External
	template JavaSource
	filename ../Code/FatorialFor.java

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
uncover<2>{
\end_layout

\end_inset


\emph on
return
\emph default
: Retorna o valor definido pela expressão
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout PlainFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Final
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout
\begin_inset External
	template JavaSource
	filename ../Code/FatorialFuncao.java

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout PlainFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Exercícios I
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Enumerate
Implemente:
\end_layout

\begin_deeper
\begin_layout Enumerate
O exemplo de fatorial segundo própria implementação, refatorando o cálculo
 de fatorial para uma função de nome 
\emph on
fatorial.
\end_layout

\begin_layout Enumerate
Uma função soma que retorne a soma dos 
\emph on
n
\emph default
 primeiros elementos, onde 
\emph on
n
\emph default
 é o argumento para essa função.
\end_layout

\end_deeper
\begin_layout Enumerate
Refazer o exemplo de cálculo de área e perímetro de um círculo, refatorando
 cada um dos cálculos para as funções 
\emph on
area 
\emph default
e 
\emph on
perimetro
\emph default
.
 
\end_layout

\begin_layout Enumerate
Em ambos os exemplos, a definição matemática só define ser possível os cálculos
 para números positivos.
 Isso não é verdade quanto aos códigos programados.
 Utilizando as instruções if-then-else, proponha uma implementação que só
 execute o fatorial caso o número passado seja positivo e que imprima "Parâmetro
 inválido!", caso contrário.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
30 min +-
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout PlainFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Até agora
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Itemize
Declarando uma variável
\end_layout

\begin_layout Itemize

\emph on
If-then-else
\end_layout

\begin_layout Itemize
Loop 
\emph on
for
\emph default
 (O 
\emph on
for
\emph default
 representa um loop PARA-ATÉ)
\end_layout

\begin_layout Itemize
Definindo uma função
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout PlainFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
While
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Exemplo while
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Itemize
ENQUANTO-FAÇA
\end_layout

\begin_layout Itemize
while (condição) { corpo }
\end_layout

\begin_layout Plain Layout
\begin_inset External
	template JavaSource
	filename ../Code/WhileLoop.java

\end_inset


\end_layout

\begin_layout ExampleBlock
\begin_inset Argument 2
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
uncover<2->{0
\backslash

\backslash
1
\backslash

\backslash
2
\backslash

\backslash
...
\backslash

\backslash
99}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout PlainFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Do-while
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Itemize
FAÇA-ENQUANTO
\end_layout

\begin_layout Itemize
do { corpo } while (condição)
\end_layout

\begin_layout Plain Layout
\begin_inset External
	template JavaSource
	filename ../Code/DoWhileLoop.java

\end_inset


\end_layout

\begin_layout ExampleBlock
\begin_inset Argument 2
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
uncover<2>{0
\backslash

\backslash
1
\backslash

\backslash
2
\backslash

\backslash
...
\backslash

\backslash
99}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout PlainFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Itemize
Resultados iguais? 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
uncover<2>{
\end_layout

\end_inset


\color red
Não.
\color inherit

\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset External
	template JavaSource
	filename ../Code/WhileLoop2.java

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset External
	template JavaSource
	filename ../Code/DoWhileLoop2.java

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout PlainFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
uncover<2->{
\end_layout

\end_inset

É possível intercambiar as diretivas de loop?
\begin_inset ERT
status open

\begin_layout Plain Layout

} 
\backslash
uncover<3->{
\end_layout

\end_inset


\color red
Sim.
\color inherit

\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout PlainFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset External
	template JavaSource
	filename ../Code/CorrelacaoForWhile.java

\end_inset


\end_layout

\begin_layout Itemize

\emph on
While
\emph default
 pode ser visto como um 
\emph on
for
\emph default
 simplificado
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
uncover<2->{
\end_layout

\end_inset


\emph on
Do-while 
\emph default
cobre um caso especial
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
uncover<3->{
\end_layout

\end_inset

Java é uma linguagem complexa e completa
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
uncover<3->{
\end_layout

\end_inset

Nem todas as linguagens apresentam todas essas construções
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout PlainFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
break, continue e return
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Itemize
Muitas vezes, seria interessante alterar o fluxo de execução
\end_layout

\begin_layout Itemize

\emph on
return
\emph default
 é um exemplo de alteração do fluxo de instrução
\end_layout

\begin_layout Itemize
Ao encontrá-la, o código sempre retorna para quem o chamou
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout PlainFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
return
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Itemize
Retorna imediatamente para a função chamante
\end_layout

\begin_layout Itemize
Interrompe 
\emph on
qualquer
\emph default
 fluxo de execução atual
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout PlainFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout
\begin_inset External
	template JavaSource
	filename ../Code/ExemploReturn.java

\end_inset


\end_layout

\begin_layout ExampleBlock
\begin_inset Argument 2
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
uncover<2->{i = 2100 m3 = 2100
\backslash

\backslash
i = 2101 m3 = 2103
\backslash

\backslash
i = 2102 m3 = 2103
\backslash

\backslash
i = 2103 m3 = 2103
\backslash

\backslash
i = 2104 m3 = 2106}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout PlainFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
break
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Itemize
Termina imediatamente o loop
\end_layout

\begin_layout Itemize
Pula para próxima instrução após o loop
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout PlainFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout
\begin_inset External
	template JavaSource
	filename ../Code/ExemploBreak.java

\end_inset


\end_layout

\begin_layout ExampleBlock
\begin_inset Argument 2
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
uncover<2>{j = 300 i = 200}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout PlainFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
continue
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Itemize
Loop retorna ao início imediatamente
\end_layout

\begin_layout Itemize
Pula para a próxima iteração
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout PlainFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout
\begin_inset External
	template JavaSource
	filename ../Code/ExemploContinue.java

\end_inset


\end_layout

\begin_layout ExampleBlock
\begin_inset Argument 2
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
uncover<2>{j = 300 i = 200}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout PlainFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout
\begin_inset External
	template JavaSource
	filename ../Code/InstrucoesDeControle.java

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
uncover<2->{
\end_layout

\end_inset

CUIDADO! Podem complicar desnecessariamente
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout PlainFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout
\begin_inset External
	template JavaSource
	filename ../Code/InstrucoesDeControle2.java

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout PlainFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Exercícios II
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard

\emph on
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Enumerate
Implemente, utilizando as instruções de loop (for, while e do-while) um
 código que faça a iteração por uma String de entrada e imprima um caracter
 dessa String por linha.
 
\begin_inset Newline newline
\end_inset


\emph on
Obs: Devem ser implementadas as três versões.
\end_layout

\begin_layout Enumerate
Implementar um programa que imprima todos os números inteiros ímpares, dado
 um intervalo.
 A título de exemplo, utilize o intervalo de 3120 a 3150.
\end_layout

\begin_layout Enumerate
Faça um programa que encontre todos os números primos num determinado intervalo.
 
\begin_inset Newline newline
\end_inset


\emph on
Dica: Um número primo é somente divisível por 1 e ele mesmo.
\end_layout

\end_inset


\end_layout

\end_deeper
\end_body
\end_document
