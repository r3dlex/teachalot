#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{color}
%Necessary for minted
\definecolor{bg}{rgb}{1,1,1}
\usepackage{minted}

\newminted{java}{
  fontsize=\footnotesize, 
  linenos,
  frame=lines,
  bgcolor=bg,
  baselinestretch=1,
  tabsize=2
} 

\newminted{javasnip}{
  fontsize=\footnotesize, 
  frame=lines,
  bgcolor=bg,
  baselinestretch=1,
  tabsize=2
} 

%Remove a numeracao das paginas
\pagestyle{empty}% Reset page style to 'empty'
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language brazilian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\align block
\begin_inset Graphics
	filename ../Image/Logo-FaculdadesCesusc.png
	height 10theight%

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{
\backslash
baselineskip}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
Faculdade CESUSC
\end_layout

\begin_layout Standard

\series bold
Disciplina: Linguagem de Programação III
\end_layout

\begin_layout Standard

\series bold
Professor: André Ferreira Bem Silva
\end_layout

\begin_layout Standard

\series bold
Data: __/__/2015
\end_layout

\begin_layout Standard

\series bold
Aluno(a): _________________________________
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{
\backslash
baselineskip}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
Leia atentamente as questões a seguir e responda-as.
 Assinale somente uma alternativa correta em cada questão de múltipla escolha
 e observe a pontuação de cada questão.
 Boa sorte!
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="13">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Questão
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gabarito
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Note Note
status open

\begin_layout Plain Layout
c
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Note Note
status open

\begin_layout Plain Layout
c
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Note Note
status open

\begin_layout Plain Layout
d
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Note Note
status open

\begin_layout Plain Layout
d
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Note Note
status open

\begin_layout Plain Layout
d
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
e
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Note Note
status open

\begin_layout Plain Layout
e
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Note Note
status open

\begin_layout Plain Layout
d
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
c
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Note Note
status open

\begin_layout Plain Layout
a
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Note Note
status open

\begin_layout Plain Layout
c
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Note Note
status open

\begin_layout Section
Preâmbulo
\end_layout

\begin_layout Plain Layout
Considere as seguintes instruções MIPS:
\end_layout

\begin_layout Itemize
lw $a, i($b)
\begin_inset Newline newline
\end_inset

Ex: lw $5, 2($3).
 Carregar (load) no registrador de número 5 uma word (4 bytes ou 32 bits)
 que está na memória começando no endereço armazenado no registrador de
 número 3, somando 2 a esse endereço
\end_layout

\begin_layout Itemize
muli $a, $b, $c
\begin_inset Newline newline
\end_inset

Ex: muli $2, $5, 5.
 Multiplicar por 5 o valor no registrador número 5 e salvar no registrador
 número 2
\end_layout

\begin_layout Itemize
add $a, $b, $c 
\begin_inset Newline newline
\end_inset

Ex: add $2, $5, $4.
 Somar os valores nos registradores número 5 e número 4 e colocar o resultado
 no registrador número 2 
\end_layout

\begin_layout Itemize
sw $a, i($b).
 
\begin_inset Newline newline
\end_inset

Ex: sw $2, 4($1).
 Armazenar (store) o conteúdo do registrador de número 2 (4 bytes ou 32
 bits) na memória na posição do endereço armazenado no registrador de número
 1, somando 4 a esse endereço 
\end_layout

\begin_layout Section
Questões
\end_layout

\end_inset


\end_layout

\begin_layout Standard
A respeito do trecho em sequência, responda as questões 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:Soma1"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:Soma2"

\end_inset

 e 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:Soma3"

\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset External
	template CppSource
	filename ../../Algoritmos/Code/E01/soma.c

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "enu:Soma1"

\end_inset

(1 ponto) Assinale a questão com todas as assertivas 
\series bold
corretas
\series default
:
\end_layout

\begin_deeper
\begin_layout Enumerate
A 
\emph on
funcaoX 
\emph default
é uma função que tem como parâmetro um tipo inteiro 
\emph on
n 
\emph default
o qual não altera o cálculo da função.
\end_layout

\begin_layout Enumerate
O código não compila uma vez que não é possível passar-se uma variável como
 argumento para a funcaoX, confome acontece com o 
\emph on
i 
\emph default
na linha 19.
\end_layout

\begin_layout Enumerate
A 
\emph on
funcaoX
\emph default
 poderia chamar-se soma e calcula o somatório de n elementos, tal que soma(n)
 = 0 + 1 + 2 + ...
 + n.
 
\end_layout

\begin_layout Enumerate
Ao alterar-se, na linha 18, o tipo de i de 
\emph on
int
\emph default
 para 
\emph on
float
\emph default
, não haveria mudança na compilação e execução do código.
\end_layout

\begin_layout Enumerate
A 
\emph on
funcaoX
\emph default
, é também denominada função de 
\emph on
fibonacci
\emph default
 e caracteriza-se pela dependência do resultado de n mediante os dois antecedent
es.
 Isto é, 
\begin_inset Formula $fib(n)=fib(n-1)+fib(n-2)$
\end_inset

, e 
\begin_inset Formula $fib(0)=1$
\end_inset

, 
\begin_inset Formula $fib(1)=1$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "enu:Soma2"

\end_inset

(1 ponto) Qual linha constitui a saída esperada para a execução do código?
\end_layout

\begin_deeper
\begin_layout Enumerate
f(6)= 21 f(7)=28 f(8)=36 f(9)=45
\end_layout

\begin_layout Enumerate
f(5)=10 f(6)=15 f(7)=21 f(8)=28
\end_layout

\begin_layout Enumerate
f(5)=15 f(6)=21 f(7)=28 f(8)=36
\end_layout

\begin_layout Enumerate
f(5)=15 f(6)=21 f(7)=28 f(8)=36 f(9) = 45
\end_layout

\begin_layout Enumerate
Falha de execução ou falha de compilação.
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "enu:Soma3"

\end_inset

(1 ponto) Assinale a alternativa 
\series bold
incorreta
\series default
.
\end_layout

\begin_deeper
\begin_layout Enumerate
A função 
\emph on
main 
\emph default
sempre apresenta a mesma assinatura no C e é o ponto de entrada do código
 em questão.
 
\end_layout

\begin_layout Enumerate
Um algoritmo é uma sequência de passos para atingir um determinado objetivo.
 Em linguagens de programação, o algoritmo é uma sequência de passos, que
 dado uma entrada, gera sempre a mesma saída para esta entrada.
\end_layout

\begin_layout Enumerate
Uma expressão lógica ou relacional pode ser usada como condição de iteração
 em um loop.
\end_layout

\begin_layout Enumerate
O número de instruções executadas em um loop será sempre o mesmo para os
 loops for, while e do-while, dado que a condição do mesmo seja idêntica.
\end_layout

\begin_layout Enumerate
Ao declarar-se a 
\emph on
funcaoX
\emph default
, em qualquer chamada após sua declaração que utilize-se 
\emph on
funcaoX
\emph default
(
\emph on
argumento
\emph default
), onde 
\emph on
argumento
\emph default
 é um número inteiro, o compilador sabe que nesse ponto haverá uma chamada
 de função para a 
\emph on
funcaoX
\emph default
 e gera código para que isso aconteça.
\end_layout

\end_deeper
\begin_layout Enumerate
(0,5 ponto) Qual dos seguintes códigos 
\series bold
não
\series default
 apresenta uma expressão lógica ou relacional em C?
\end_layout

\begin_deeper
\begin_layout Enumerate
a == b;
\end_layout

\begin_layout Enumerate
a < b;
\end_layout

\begin_layout Enumerate
a >= b;
\end_layout

\begin_layout Enumerate
a++;
\end_layout

\begin_layout Enumerate
a != b;
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{2
\backslash
baselineskip}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset External
	template CppSource
	filename ../../Algoritmos/Code/E01/fatorial.c

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{
\backslash
baselineskip}
\end_layout

\end_inset

A respeito do programa acima, responda as questões 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:Fat1"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:Fat2"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:Fat3"

\end_inset

 e 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:Fat4"

\end_inset

:
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "enu:Fat1"

\end_inset

(1 ponto) Quanto a função 
\emph on
fatorial
\emph default
, asssinale a alternativa 
\series bold
correta
\series default
:
\end_layout

\begin_deeper
\begin_layout Enumerate
Essa é uma função recursiva pelo fato de ser chamada uma única vez dentro
 do corpo main, para cada valor distinto.
\end_layout

\begin_layout Enumerate
É uma função recursiva, isto é, que chama a si mesma recursivamente, porém
 não há garantia de parada para essa função para qualquer valor 
\emph on
n
\emph default
 de parâmetro.
\end_layout

\begin_layout Enumerate
O corpo da função fatorial apresenta duas expressões lógicas e outras duas
 aritméticas.
\end_layout

\begin_layout Enumerate
O condicional if-then-else desta função serve como parada para a chamada
 recursiva da função, isto é, se a condição for verdade, então a recursão
 para nessa chamada.
\end_layout

\begin_layout Enumerate
Cada linha da função representa um comando distinto da linguagem C, e isso
 é verdade para todas as funções.
\begin_inset Newline newline
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "enu:Fat2"

\end_inset

(0,5 ponto) Assinale a opção que
\series bold
 falsa 
\series default
a respeito do programa fatorial:
\end_layout

\begin_deeper
\begin_layout Enumerate
O condicional no corpo do main, evita que seja passado um valor negativo
 a função fatorial, o que causaria um loop infinito.
\end_layout

\begin_layout Enumerate
No loop 
\emph on
for,
\emph default
 primeiro executa-se a inicialização, depois verifica-se a condição, se
 ela for verdade, executa-se o corpo do laço e depois faz-se o incremento,
 retornando então a condição, senão executa-se o comando imediatamente subsequen
te ao término do escopo do laço.
 Os demais loops se darão dessa forma.
\end_layout

\begin_layout Enumerate
O resultado da função main para esse programa, será na saída do console
 "Entre com um valor:" para obter-se o valor de 
\emph on
n
\emph default
 e a impressão dos valores de fatoriais, um por linha, no seguinte formato,
 "fatorial(i) = x", onde x é o valor do fatorial 
\begin_inset Formula $x!$
\end_inset

.
\end_layout

\begin_layout Enumerate
No corpo da função main, há a declaração de duas variáveis inteiras, uma
 no escopo do main e outro no escopo interno do condicional, utilizada na
 inicialização da variável de iteração.
\end_layout

\begin_layout Enumerate
A diretiva printf lê valores formatados da entrada de console, enquanto
 a scanf lê escreve de maneira formatada na saída de console.
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "enu:Fat3"

\end_inset

(0,5 ponto) Qual das seguintes constatações é 
\series bold
falsa
\series default
 no escopo do algoritmo indicado?
\end_layout

\begin_deeper
\begin_layout Enumerate
A palavra-chave return, nas funções 
\emph on
main
\emph default
 e 
\emph on
fatorial
\emph default
, indicam que naquele ponto, retorna-se um valor do tipo de retorno para
 a função chamante.
\end_layout

\begin_layout Enumerate
Dentro do loop 
\emph on
for
\emph default
 na função main, quando passa-se o valor 
\emph on
i
\emph default
 para 
\emph on
fatorial
\emph default
, esse valor vira o argumento da função nesse ponto e a variável 
\emph on
n
\emph default
 é inicializada com uma cópia do valor 
\emph on
i
\emph default
.
\end_layout

\begin_layout Enumerate
O tipo int, define uma variável inteira de 32 bits numa máquina PC (x86).
 O valor máximo calculado pela função 
\emph on
fatorial
\emph default
, estará definido pelo tamanho da variável.
 
\end_layout

\begin_layout Enumerate
A função main retorna um valor de tipo inteiro, tipicamente 0, o qual indica
 ao sistema operacional que o programa executou com sucesso.
\end_layout

\begin_layout Enumerate
Não é possível utilizar-se estruturas de laços e recursão no mesmo código,
 isto é, uma função recursiva é incapaz de utilizar um laço em seu 
\emph on
corpo
\emph default
 (escopo).
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "enu:Fat4"

\end_inset

(0,5 ponto) Qual a 
\series bold
saída esperada
\series default
 para o programa se o 
\emph on
n
\emph default
 assumir o valor 
\emph on
4
\emph default
? (Ao omitir-se a saída "Entre com um valor:")
\end_layout

\begin_deeper
\begin_layout Enumerate
fat(0) = 1
\begin_inset Newline newline
\end_inset

fat(1) = 1
\begin_inset Newline newline
\end_inset

fat(2) = 2
\begin_inset Newline newline
\end_inset

fat(3) = 6
\begin_inset Newline newline
\end_inset

fat(4)=24
\end_layout

\begin_layout Enumerate
fat(0)=1
\begin_inset Newline newline
\end_inset

fat(1) = 1
\begin_inset Newline newline
\end_inset

fat(2) = 2
\begin_inset Newline newline
\end_inset

fat(3) = 6
\begin_inset Newline newline
\end_inset

fat(4) = 24
\end_layout

\begin_layout Enumerate
fat(1)=1
\begin_inset Newline newline
\end_inset

fat(2) = 2
\begin_inset Newline newline
\end_inset

fat(3) = 6
\begin_inset Newline newline
\end_inset

fat(4) = 24
\begin_inset Newline newline
\end_inset

fat(5) = 120
\end_layout

\begin_layout Enumerate
fat(0) = 1
\begin_inset Newline newline
\end_inset

fat(1) = 2
\begin_inset Newline newline
\end_inset

fat(2) = 2
\begin_inset Newline newline
\end_inset

fat(3) = 6
\end_layout

\begin_layout Enumerate
fat(0) = 1
\begin_inset Newline newline
\end_inset

fat(1) = 1
\begin_inset Newline newline
\end_inset

fat(2) = 1
\begin_inset Newline newline
\end_inset

fat(3) = 3
\begin_inset Newline newline
\end_inset

fat(4) = 12
\end_layout

\end_deeper
\begin_layout Enumerate
(0,5 ponto) Quais dos seguintes tipos 
\series bold
não
\series default
 é um tipo básico da linguagem C?
\end_layout

\begin_deeper
\begin_layout Enumerate
char
\end_layout

\begin_layout Enumerate
int
\end_layout

\begin_layout Enumerate
byte
\end_layout

\begin_layout Enumerate
long
\end_layout

\begin_layout Enumerate
float
\end_layout

\end_deeper
\begin_layout Enumerate
(1 ponto) Qual das seguintes saídas apresenta um número 
\series bold
corretamente
\series default
 convertido de uma base para outra?
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $61_{10}=0b111101$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $32_{10}=0b1000$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $45_{10}=0x26$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $0b111=0x8$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $0x16=0b10000$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{2
\backslash
baselineskip}
\end_layout

\end_inset


\begin_inset External
	template CppSource
	filename ../../Algoritmos/Code/Objetos/2_classes_array.cpp

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{
\backslash
baselineskip}
\end_layout

\end_inset

A respeito do programa acima, responda as questões 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:Pessoa1"

\end_inset

 e 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:Pessoa2"

\end_inset

:
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "enu:Pessoa1"

\end_inset

(0,5 ponto) 
\series bold
Não
\series default
 é verdade, a respeito do referido código:
\end_layout

\begin_deeper
\begin_layout Enumerate
A classe Pessoa possui um atributo que é a variável 
\emph on
_nome
\emph default
, do tipo 
\emph on
std::string
\emph default
.
\end_layout

\begin_layout Enumerate
Cada instância do objeto pessoa possui um atributo denominado _
\emph on
nome
\emph default
, cujo método 
\emph on
getNome
\emph default
 torna publicamente acessível para leitura.
\end_layout

\begin_layout Enumerate
Se imaginarmos que uma determinada variável p referencia uma instância de
 pessoa, então 
\emph on
p.getNome() = "Roberto";
\emph default
 modifica o valor do atributo interno _
\emph on
nome
\emph default
 desse objeto para Roberto.
\end_layout

\begin_layout Enumerate
Os setores public e private identificam métodos, atributos e definições
 acessíveis no escopo global e no escopo da classe, respectivamente.
\end_layout

\begin_layout Enumerate
O construtor de Pessoa é público e recebe uma std::string como parâmetro,
 enquanto o destrutor padrão, mesmo sem ser declarado, existe.
 Isto é, a destruição desse objeto não gera um 
\emph on
vazamento de memória
\emph default
.
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "enu:Pessoa2"

\end_inset

(1,0 ponto) Qual a 
\series bold
saída de console
\series default
 esperada para a execução do main?
\begin_inset Newline newline
\end_inset

R:
\end_layout

\end_body
\end_document
